import jsPDF from 'jspdf';
import autoTable from 'jspdf-autotable';

interface ShortlistItem {
  supplierName: string;
  score: number;
  savingsPct: number;
  audit: string;
  country: string;
  processes: string[];
  materials: string[];
}

interface ExportMeta {
  part?: string;
  date: string;
  scope: string;
}

export function exportShortlistPdf(items: ShortlistItem[], meta: ExportMeta): void {
  try {
    // Create new PDF document in landscape orientation
    const doc = new jsPDF({
      orientation: 'landscape',
      unit: 'mm',
      format: 'a4'
    });

    // Set fonts and colors
    doc.setFont('helvetica', 'bold');
    doc.setFontSize(18);
    doc.setTextColor(255, 122, 26); // Brand orange

    // Header
    doc.text('TACTO Alt-Supplier Shortlist', 20, 25);

    // Reset to normal font for meta info
    doc.setFont('helvetica', 'normal');
    doc.setFontSize(10);
    doc.setTextColor(100, 100, 100);

    // Meta information row
    const metaY = 35;
    doc.text(`Part: ${meta.part || 'N/A'}`, 20, metaY);
    doc.text(`Date: ${meta.date}`, 120, metaY);
    doc.text(`Scope: ${meta.scope}`, 220, metaY);

    // Prepare table data
    const tableData = items.map(item => [
      item.supplierName,
      `${item.score}/100`,
      `${item.savingsPct.toFixed(1)}%`,
      item.audit,
      item.country,
      item.processes.join(', '),
      item.materials.join(', ')
    ]);

    // Generate table
    autoTable(doc, {
      head: [['Supplier', 'Score', 'Est. Savings (%)', 'Audit Status', 'Country', 'Processes', 'Materials']],
      body: tableData,
      startY: 45,
      theme: 'grid',
      headStyles: {
        fillColor: [255, 122, 26], // Brand orange
        textColor: [255, 255, 255],
        fontStyle: 'bold',
        fontSize: 9
      },
      bodyStyles: {
        fontSize: 8,
        textColor: [60, 60, 60]
      },
      alternateRowStyles: {
        fillColor: [248, 249, 250]
      },
      columnStyles: {
        0: { cellWidth: 45 }, // Supplier name
        1: { cellWidth: 20, halign: 'center' }, // Score
        2: { cellWidth: 25, halign: 'center' }, // Savings
        3: { cellWidth: 30 }, // Audit status
        4: { cellWidth: 25 }, // Country
        5: { cellWidth: 50 }, // Processes
        6: { cellWidth: 40 } // Materials
      },
      margin: { left: 20, right: 20 },
      tableWidth: 'wrap'
    });

    // Footer
    const pageHeight = doc.internal.pageSize.height;
    doc.setFontSize(8);
    doc.setTextColor(150, 150, 150);
    doc.text('Generated by TACTO Sourcing Platform', 20, pageHeight - 15);
    doc.text(`Generated on ${new Date().toLocaleString()}`, 200, pageHeight - 15);

    // Generate filename with timestamp
    const timestamp = new Date().toISOString().split('T')[0];
    const partSuffix = meta.part ? `_${meta.part.replace(/[^a-zA-Z0-9]/g, '')}` : '';
    const filename = `TACTO_Shortlist${partSuffix}_${timestamp}.pdf`;

    // Save the PDF
    doc.save(filename);

  } catch (error) {
    console.error('Error generating PDF:', error);
    throw new Error('Failed to generate PDF export');
  }
}